def label = "webapp-${UUID.randomUUID().toString()}"
podTemplate(
	label: label, 
	containers: [
		//container image는 docker search 명령 이용
		containerTemplate(name: "docker-python", image: "python:3.7.2", ttyEnabled: true, command: "cat"),
		containerTemplate(name: "docker", image: "docker:stable", ttyEnabled: true, command: "cat"),
		containerTemplate(name: "helm", image: "dtzar/helm-kubectl", ttyEnabled: true, command: "cat")
	],
	//volume mount
	volumes: [
		hostPathVolume(hostPath: "//var/run/docker.sock", mountPath: "/var/run/docker.sock")
	]
)
{
	node(label) {

        stage('Clone repository') {
         checkout scm
        }
		
		try {
			stage("unit test"){
				container('docker-python'){
					sh "pip install -r requirements.txt"
					sh "pytest testCS.py"
				}
			}

			stage("Build Docker image"){
                container("docker"){
                    app=docker.build("jyh5530/web-analysis")
                }
            }

			stage("Push Docker image") {
				container("docker") {
					docker.withRegistry("https://registry.hub.docker.com", "dockerhubid") {
                        app.push("latest")
					}
				}
			}

			stage( "Deploy to cluster" ) {
				container("helm") {
					boolean isExist = false
					
					//====== 이미 설치된 chart 인지 검사 =============
					String out = sh script: "helm ls -q --namespace deploy", returnStdout: true
					if(out.contains("webapp")) isExist = true
					sh "helm repo add github-webanalysis https://yunhacho.github.io/helm-charts/"
					sh "helm repo update"
					//===========================				
					if (isExist) {
						echo "Already installed. I will upgrade it with chart file."
						sh "helm upgrade webapp github-webanalysis/webanalysis --namespace deploy"					
					} else {
						echo "Install with chart file !"
						sh "helm install webapp github-webanalysis/webanalysis --namespace deploy"					
					}
				}
			}

		}
		catch(e) {
			currentBuild.result = "FAILED"
		}
		
	}
}
